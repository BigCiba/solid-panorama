// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compile transform: for each 1`] = `
"import { insert as _$insert } from "@solid-panorama/runtime";
import { setProp as _$setProp } from "@solid-panorama/runtime";
import { createComponent as _$createComponent } from "@solid-panorama/runtime";
import { For as _$For } from "@solid-panorama/runtime";
import { createElement as _$createElement } from "@solid-panorama/runtime";
import { render } from "solid-js/web";
import { createSignal } from "solid-js";
const App = () => {
  const [list, setList] = createSignal(['A']);
  function click() {
    setList([...list(), "B"]);
  }
  return (() => {
    const _el$ = _$createElement("Panel", {}, null),
      _el$2 = _$createElement("Button", {
        onClick: click
      }, _el$);
    _$insert(_el$, _$createComponent(_$For, {
      get each() {
        return list();
      },
      children: (item, index) => {
        return (() => {
          const _el$4 = _$createElement("Label", {
            text: item
          }, null);
          _$setProp(_el$4, "text", item);
          return _el$4;
        })();
      }
    }, _el$), _el$2);
    _$setProp(_el$2, "onClick", click);
    return _el$;
  })();
};
render(() => _$createComponent(App, {}, null), document.getElementById("app"));"
`;

exports[`compile transform: normal 1`] = `
"import { insert as _$insert } from "@solid-panorama/runtime";
import { createComponent as _$createComponent } from "@solid-panorama/runtime";
import { setProp as _$setProp } from "@solid-panorama/runtime";
import { createElement as _$createElement } from "@solid-panorama/runtime";
import { render } from 'solid-panorama-runtime';
function Item(props) {
  return (() => {
    const _el$ = _$createElement("Panel", {
        id: "root",
        "class": "root"
      }, null),
      _el$2 = _$createElement("Label", {
        text: "Testing"
      }, _el$),
      _el$3 = _$createElement("Panel", {
        "class": "buttons"
      }, _el$),
      _el$4 = _$createElement("Button", {}, _el$3),
      _el$5 = _$createElement("Button", {}, _el$3),
      _el$6 = _$createElement("Button", {}, _el$3);
    _$setProp(_el$, "id", "root");
    _$setProp(_el$, "class", "root");
    _$setProp(_el$2, "text", "Testing");
    _$setProp(_el$3, "class", "buttons");
    return _el$;
  })();
}
function HelloWorld() {
  return (() => {
    const _el$7 = _$createElement("Panel", {}, null);
    _$insert(_el$7, _$createComponent(Item, {
      show: true
    }, _el$7), null);
    return _el$7;
  })();
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;
