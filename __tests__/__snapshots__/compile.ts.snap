// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compile transform: dynamic 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { Dynamic as _$Dynamic } from "solid-panorama-runtime";
import { createTextNode as _$createTextNode } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
const RedThing = () => (() => {
  const _el$ = _$createElement("Panel", {
    style: "color: red;"
  }, null);
  _$createTextNode(\`Red Thing\`, _el$);
  return _el$;
})();
const GreenThing = () => (() => {
  const _el$3 = _$createElement("Panel", {
    style: "color: green;"
  }, null);
  _$createTextNode(\`Green Thing\`, _el$3);
  return _el$3;
})();
const BlueThing = () => (() => {
  const _el$5 = _$createElement("Panel", {
    style: "color: blue;"
  }, null);
  _$createTextNode(\`Blue Thing\`, _el$5);
  return _el$5;
})();
const options = {
  red: RedThing,
  green: GreenThing,
  blue: BlueThing
};
function HelloWorld() {
  const [selected, setSelected] = createSignal("red");
  return _$createComponent(_$Dynamic, {
    get component() {
      return options[selected()];
    }
  }, null);
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: for each 1`] = `
"import { insert as _$insert } from "solid-panorama-runtime";
import { createTextNode as _$createTextNode } from "solid-panorama-runtime";
import { setProp as _$setProp } from "solid-panorama-runtime";
import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { For as _$For } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from "solid-js/web";
import { createSignal } from "solid-js";
const App = () => {
  const [list, setList] = createSignal(['A']);
  function click() {
    setList([...list(), "B"]);
  }
  return (() => {
    const _el$ = _$createElement("Panel", {}, null),
      _el$2 = _$createElement("Button", {
        onClick: click
      }, _el$);
    _$insert(_el$, _$createComponent(_$For, {
      get each() {
        return list();
      },
      children: (item, index) => {
        return (() => {
          const _el$4 = _$createElement("Label", {
            text: item
          }, null);
          _$setProp(_el$4, "text", item);
          return _el$4;
        })();
      }
    }, _el$), _el$2);
    _$createTextNode(\`Click\`, _el$2);
    _$setProp(_el$2, "onClick", click);
    return _el$;
  })();
};
render(() => _$createComponent(App, {}, null), $('#app'));"
`;

exports[`compile transform: fragment 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function HelloWorld() {
  return [_$createElement("Button", {}, null), _$createElement("Button", {}, null), _$createElement("Button", {}, null)];
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: normal 1`] = `
"import { insert as _$insert } from "solid-panorama-runtime";
import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { effect as _$effect } from "solid-panorama-runtime";
import { setProp as _$setProp } from "solid-panorama-runtime";
import { use as _$use } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function Item(props) {
  const [rootStyle, setRootStyle] = createSignal('root');
  let visible = true;
  let root, btnA;
  return (() => {
    const _el$ = _$createElement("Panel", {
        id: "root"
      }, null),
      _el$2 = _$createElement("Label", {
        text: "Testing"
      }, _el$),
      _el$3 = _$createElement("Panel", {
        className: "buttons"
      }, _el$),
      _el$4 = _$createElement("Button", {}, _el$3),
      _el$5 = _$createElement("Button", {
        visible: visible
      }, _el$3),
      _el$6 = _$createElement("Button", {}, _el$3);
    const _ref$ = root;
    typeof _ref$ === "function" ? _$use(_ref$, _el$) : root = _el$;
    _$use(a => btnA = a, _el$4);
    _$setProp(_el$5, "visible", visible);
    _$effect(_$p => _$setProp(_el$, "className", rootStyle().join(' '), _$p));
    return _el$;
  })();
}
function HelloWorld() {
  return (() => {
    const _el$7 = _$createElement("Panel", {}, null);
    _$insert(_el$7, _$createComponent(Item, {}, _el$7), null);
    _$insert(_el$7, _$createComponent(Item, {
      show: true
    }, _el$7), null);
    return _el$7;
  })();
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: snippet 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function HelloWorld() {
  return _$createElement("Button", {
    snippet: "templateA"
  }, null);
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: spread operator 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { spread as _$spread } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function Item(props) {
  return (() => {
    const _el$ = _$createElement("Panel", props, null);
    _$spread(_el$, props, false);
    return _el$;
  })();
}
function HelloWorld() {
  return _$createComponent(Item, {}, null);
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: style 1`] = `
"import { insert as _$insert } from "solid-panorama-runtime";
import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { setProp as _$setProp } from "solid-panorama-runtime";
import { effect as _$effect } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function Item(props) {
  return (() => {
    const _el$ = _$createElement("Panel", {}, null);
    _$effect(_$p => _$setProp(_el$, "class", props.style, _$p));
    return _el$;
  })();
}
function HelloWorld() {
  return (() => {
    const _el$2 = _$createElement("Panel", {}, null),
      _el$3 = _$createElement("Button", {}, _el$2),
      _el$4 = _$createElement("Button", {
        style: "width:12px; height: 12px;"
      }, _el$2);
    _$setProp(_el$3, "style", {
      width: '12px',
      height: 12
    });
    _$insert(_el$2, _$createComponent(Item, {
      style: "red"
    }, _el$2), null);
    return _el$2;
  })();
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: textNode 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { createTextNode as _$createTextNode } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function HelloWorld() {
  return (() => {
    const _el$ = _$createElement("Panel", {}, null),
      _el$2 = _$createElement("Panel", {}, _el$),
      _el$4 = _$createElement("Panel", {}, _el$),
      _el$6 = _$createElement("Panel", {}, _el$),
      _el$7 = _$createElement("Label", {
        text: "Welcome"
      }, _el$6),
      _el$8 = _$createTextNode(\`#addon_game_name\`, _el$6),
      _el$9 = _$createElement("Label", {
        text: "(～￣▽￣)～"
      }, _el$6);
    _$createTextNode(\`Welcome My Game\`, _el$2);
    _$createTextNode(\`<strong>Welcome</strong> My Game\`, _el$4);
    return _el$;
  })();
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;

exports[`compile transform: vars 1`] = `
"import { createComponent as _$createComponent } from "solid-panorama-runtime";
import { effect as _$effect } from "solid-panorama-runtime";
import { setProp as _$setProp } from "solid-panorama-runtime";
import { createElement as _$createElement } from "solid-panorama-runtime";
import { render } from 'solid-panorama-runtime';
function HelloWorld() {
  const [ability, setAbility] = createSignal("");
  return (() => {
    const _el$ = _$createElement("Panel", {
      hittest: true
    }, null);
    _$setProp(_el$, "hittest", true);
    _$effect(_$p => _$setProp(_el$, "vars", {
      name: 'robin',
      ability: ability()
    }, _$p));
    return _el$;
  })();
}
render(() => _$createComponent(HelloWorld, {}, null), $('#app'));"
`;
